{"mappings":"AAyaA,MAAMA,EAAW,CACfC,KAAMC,SAASC,cAAc,cAC7BC,cAAeF,SAASC,cAAc,sBACtCE,SAAUH,SAASC,cAAc,YAGnCH,EAASK,SAASC,iBAAiB,SAInC,WACEN,EAASI,cAAcG,mBACrB,YACA,uC,IALJP,EAASC,KAAKK,iBAAiB,UAS/BE,eAA6BC,GAC3BA,EAAIC,iBAEJ,MACMC,EADW,IAAIC,SAASH,EAAII,eAE/BC,OAAO,WACPC,KAAIC,GAAQA,EAAKC,SACjBC,QAAOF,GAAQA,IAEZG,QAKRX,eAAgCG,GAC9B,MAAMS,EAAW,uCACXC,QAAkBV,EAAUI,KAAIP,MAAMc,UACnBC,MAAM,GAAGH,IAAWE,MAC3BE,SAKlB,aAFmBC,QAAQC,WAAWL,IAGnCH,QAAO,EAACS,OAAEA,KAAwB,cAAXA,IACvBZ,KAAI,EAACa,MAAEA,KAAYA,EAAM,GAAGC,QAAQ,I,CAhBhBC,CAAiBnB,GAClCoB,QAkBRvB,eAA8BW,GAC5B,MAAMC,EAAW,+BACXY,EAAY,gBACZC,EAAU,kCAEVZ,QAAkBF,EAASJ,KAAIP,MAAMqB,UAClBN,MACrB,GAAGH,IAAWY,SAAiBC,OAAaJ,cAE9BL,SAKlB,aAFmBC,QAAQC,WAAWL,IAGnCH,QAAO,EAACS,OAAEA,KAAwB,cAAXA,IACvBZ,KACC,EACEa,OACEM,SAASC,OACPA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,IAErBC,UAAUjB,QAAEA,EAAOkB,KAAEA,QAElB,C,QACLlB,E,KACAkB,E,KACAH,E,KACAC,E,OACAH,K,CAhDgBM,CAAetB,GACrCuB,QAAQC,IAAIZ,E","sources":["src/script21.js"],"sourcesContent":["// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n\n// CRUD\n\n// R - GET\n// fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n//   .then((response) => response.json())\n//   .then((json) => console.log(json));\n\n//   C - POST\n\n// const options = {\n//   method: \"POST\",\n//   headers: {\n//     \"Content-type\": \"application/json\",\n//   },\n//   body: JSON.stringify({\n//     title: \"Hello from JS\",\n//     body: \"qweryuiqWAERTY\",\n//     userId: 12,\n//   }),\n// };\n\n//-----------------------------------------------------\n// const options = {\n//   method: 'POST',\n//   body: JSON.stringify({\n//     name: 'Test user',\n//     age: 18,\n//   }),\n//   headers: {\n//     'Content-type': 'application/json',\n//   },\n// };\n// fetch('https://someURL', options);\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1')\n//   .then(response => response.json())\n//   .then(json => console.log(json));\n\n//POST -CREATE\n\n// const post = {\n//   title: 'Group 85',\n//   body: 'First post group 85',\n//   userId: 101,\n// };\n\n// const options = {\n//   method: 'POST',\n//   body: JSON.stringify(post),\n//   headers: {\n//     'Content-type': 'application/json',\n//   },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts', options)\n//   .then(resp => {\n//     console.log(resp);\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n//     return resp.json();\n//   })\n//   .then(data => console.log(data))\n//   .catch(err => console.log(err));\n\n//PUT PATCH ---------------------------------------\n\n// const DB = {\n//   id: 1,\n//   title: 'Some title',\n//   body: 'Some body',\n//   userId: 101,\n// };\n\n// const req = {\n//   title: 'New value',\n// };\n\n// const result = {\n//   id: 1,\n//   title: 'Newvalue ',\n//   body: 'Some body',\n//   userId: 101,\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1')\n//   .then(response => response.json())\n//   .then(json => console.log(json));\n\n// const options = {\n//   method: 'PUT',\n//   body: JSON.stringify({\n//     title: 'Group 85',\n//     userId: 102,\n//   }),\n//   headers: {\n//     'Content-type': 'application/json',\n//   },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1', options)\n// .then(resp => {\n//   console.log(resp);\n//   if (!resp.ok) {\n//     throw new Error(resp.statusText);\n//   }\n//   return resp.json();\n// })\n// .then(data => console.log(data))\n// .catch(err => console.log(err));\n\n// const options = {\n//   method: 'DELETE',\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1', options)\n//   .then(resp => {\n//     console.log(resp);\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n//     return resp.json();\n//   })\n//   .then(data => console.log(data))\n//   .catch(err => console.log(err));\n\n// fetch('https://jsonplaceholder.typicode.com/posts',options)\n// .then(resp =>{\n//     if(!resp.ok){\n//         throw new Error(resp.statusText)\n//     }\n//     return resp.json()\n// })\n// .then(data => console.log(data))\n// .catch(err => console.log(err))\n\n// const addPost = document.querySelector('.js-add');\n// const listPosts = document.querySelector('.js-posts');\n// const formWrapper = document.querySelector('.js-form');\n// const errMessage = document.querySelector('.js-error');\n\n// addPost.addEventListener('click', handlerAddPost);\n\n// function handlerAddPost() {\n//   formWrapper.innerHTML = `<form action=\"submit\" class=\"js-form-add\" style:\"style=\"display: flex; flex-direction: column\"\n// \"  >\n//         <input type=\"text\" name=\"name\">\n//         <textarea name=\"description\" cols=\"30\" rows=\"10\"></textarea>\n//         <button>Додати пост</button>\n//     </form>`;\n\n//   const form = document.querySelector('.js-form-add');\n//   form.addEventListener('submit', handlerFormSubmit);\n// }\n\n// function handlerFormSubmit(evt) {\n//   evt.preventDefault();\n//   //   const data = new FormData(evt.currentTarget)\n//   //   for (var key of data.keys()) {\n//   //     console.log(key);\n//   //  }\n//   //   console.log();\n//   // data.forEach(elem => console.log(elem))\n\n//   //   const { name, description } = evt.currentTarget.elements;\n\n//   const {\n//     name: { value: title },\n//     description: { value: body },\n//   } = evt.currentTarget.elements;\n//   //   const data = {\n//   //     title: name.value,\n//   //     body: description.value,\n//   //   };\n//   const data = { title, body };\n\n//   addPostService(data)\n//     .then(obj => {\n//       listPosts.insertAdjacentHTML('beforeend', createPostMarkup(obj));\n//       // listPosts.innerHTML = createPostMarkup(obj)\n//     })\n//     .catch(() => {\n//       errMessage.innerHTML = 'Не можливо додати пост';\n//     })\n//     .finally(() => {\n//       formWrapper.innerHTML = '';\n//       setTimeout(() => {\n//         errMessage.innerHTML = '';\n//       }, 2000);\n//     });\n// }\n\n// function createPostMarkup({ id, title, body }) {\n//   return `<li data-id=\"${id}\">\n//     <h2>${title}</h2>\n//     <p>${body}</p>\n//     </li>`;\n// }\n\n// function addPostService(data) {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-type': 'application/json',\n//     },\n//     body: JSON.stringify(data),\n//   };\n\n//   return fetch('https://jsonplaceholder.typicode.com/posts', options).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n//       return resp.json();\n//     }\n//   );\n// }\n\n// ПЕРЕРВА ДО 21.25\n\n// U PUT PATCH\n\n// PUT\n// {\n//     id:101,\n//     title: 'Hello fish',\n//     body: \"Hello dog\",\n//     userId : 1\n// }\n\n// {\n//     id:101.\n//     title: 'Hello fish'\n// }\n\n//PATCH\n\n// {\n//     id:101,\n//     title: 'Hello fish',\n//     body: \"Hello dog\",\n//     userId : 1\n// }\n\n// {\n//     id:101.\n//     title: 'Hello fish'\n// }\n\n// const options = {\n//   method: \"PUT\",\n//   body: JSON.stringify({\n//     id: 1,\n//     title: \"cat\",\n//   }),\n//   headers: {\n//     \"Content-type\": \"application/json\",\n//   },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n// .then(resp => resp.json()).then(data => console.log(data));\n\n// const options = {\n//     method: \"PATCH\",\n//     body: JSON.stringify({\n//       id: 1,\n//       title: \"cat\",\n//       body : 'Hello dear cat',\n//     }),\n//     headers: {\n//       \"Content-type\": \"application/json\",\n//     },\n//   };\n\n//   fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n//   .then(resp => resp.json()).then(data => console.log(data)).then(err => console.log(err));\n\n// const options ={\n//     method: \"DELETE\"\n// }\n// fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n// .then(resp => console.log(resp))\n\n// const form = document.querySelector('.js-question');\n// const getBtn = document.querySelector('.js-get-all');\n\n// form.addEventListener('submit', handlerQuestion);\n// getBtn.addEventListener('click', handlerGetQuestions);\n\n// function handlerQuestion(evt) {\n//   evt.preventDefault();\n//   const { userName, phone, email, question } = evt.currentTarget.elements;\n//   const request = {\n//     name: userName.value,\n//     phone: phone.value,\n//     email: email.value,\n//     comment: question.value,\n//   };\n//   serviceQuestion(request)\n//     .then(data => console.log(data))\n//     .catch(err => console.log(err))\n//     .finally(() => evt.target.reset());\n// }\n\n// function handlerGetQuestions(evt) {\n//   serviceGetQuestions()\n//     .then(data => console.log(data))\n//     .catch(err => console.log(err));\n// }\n\n// function serviceQuestion(data) {\n//   const options = {\n//     method: 'POST',\n//     body: JSON.stringify(data),\n//     headers: {\n//       'Content-type': 'application/json',\n//     },\n//   };\n\n//   return fetch('https://jsonplaceholder.typicode.com/posts', options).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n//       return resp.json();\n//     }\n//   );\n// }\n\n// function serviceGetQuestions() {\n//   return fetch('https://jsonplaceholder.typicode.com/posts').then(resp => {\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n//     return resp.json();\n//   });\n// }\n\n// async function serviceCountry() {\n//   const response = await fetch('https://restcountries.com/v3.1/name/Ukraine');\n\n//   if (!response.ok) {\n//     throw new Error(response.statusText);\n//   }\n//   const data = await response.json();\n//   //   console.log(data);\n//   //   console.log('hello');\n//   return data;\n// }\n\n// serviceCountry()\n//   .then(data => console.log(data))\n//   .catch(err => console.log(err));\n\n// async function serviceCountry() {\n//   try {\n//     const response = await fetch('https://restcountries.com/v3.1/name/Ukraine');\n\n//     if (!response.ok) {\n//       throw new Error(response.statusText);\n//     }\n//     const data = await response.json();\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// serviceCountry();\n\n// async function serviceCountries() {\n//   //   const resp1 = await fetch('https://restcountries.com/v3.1/name/Ukraine');\n//   //   const resp2 = await fetch('https://restcountries.com/v3.1/name/France');\n//   //   const resp3 = await fetch('https://restcountries.com/v3.1/name/Poland');\n//   const countries = ['Ukraine', 'France', 'Poland'];\n//   const responses = countries.map(async country => {\n//     const resp = await fetch(`https://restcountries.com/v3.1/name/${country}`);\n//     return resp.json();\n//   });\n// }\n// serviceCountries();\n\n// const serviceCountry = async () => {\n//   const response = await fetch('https://restcountries.com/v3.1/name/Ukraine');\n\n//   if (!response.ok) {\n//     throw new Error(response.statusText);\n//   }\n//   const data = await response.json();\n//   console.log(data);\n// };\n\n// serviceCountry();\n\n// const serviceCountry = async function () {\n//   const response = await fetch('https://restcountries.com/v3.1/name/Ukraine');\n\n//   if (!response.ok) {\n//     throw new Error(response.statusText);\n//   }\n//   const data = await response.json();\n//   console.log(data);\n// };\n\n// serviceCountry();\n\n// const service = {\n//   countryName: 'Ukraine',\n//   async serviceCountry() {\n//     const response = await fetch(\n//       `https://restcountries.com/v3.1/name/${this.countryName}`\n//     );\n//     console.log(response);\n//     if (!response.ok) {\n//       throw new Error(response.statusText);\n//     }\n//     const data = await response.json();\n//     console.log(data);\n//   },\n// };\n\n// service.serviceCountry();\n\nconst elements = {\n  form: document.querySelector('.js-search'),\n  formContainer: document.querySelector('.js-form-container'),\n  addfield: document.querySelector('.js-add'),\n};\n\nelements.addfield.addEventListener('click', handlerAdd);\n\nelements.form.addEventListener('submit', handlerSearch);\n\nfunction handlerAdd() {\n  elements.formContainer.insertAdjacentHTML(\n    'beforeend',\n    '<input type=\"text\" name=\"country\" />'\n  );\n}\n\nasync function handlerSearch(evt) {\n  evt.preventDefault();\n\n  const formData = new FormData(evt.currentTarget);\n  const countries = formData\n    .getAll('country')\n    .map(item => item.trim())\n    .filter(item => item);\n\n  const capitals = await serviceCountries(countries);\n  const weather = await serviceWeather(capitals);\n  console.log(weather);\n}\n\nasync function serviceCountries(countries) {\n  const BASE_URL = 'https://restcountries.com/v3.1/name/';\n  const responses = await countries.map(async country => {\n    const response = await fetch(`${BASE_URL}${country}`);\n    return response.json();\n  });\n\n  const data = await Promise.allSettled(responses);\n\n  return data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value[0].capital[0]);\n}\n\nasync function serviceWeather(capitals) {\n  const BASE_URL = 'http://api.weatherapi.com/v1';\n  const END_POINT = '/current.json';\n  const API_KEY = '996939ba8c804529aee100853241011';\n\n  const responses = await capitals.map(async capital => {\n    const response = await fetch(\n      `${BASE_URL}${END_POINT}?key=${API_KEY}&q=${capital}&lang=uk`\n    );\n    return response.json();\n  });\n\n  const data = await Promise.allSettled(responses);\n\n  return data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(\n      ({\n        value: {\n          current: {\n            temp_c,\n            condition: { text, icon },\n          },\n          location: { country, name },\n        },\n      }) => ({\n        country,\n        name,\n        text,\n        icon,\n        temp_c,\n      })\n    );\n}\n"],"names":["$ec4442bb8e39cc8f$var$elements","form","document","querySelector","formContainer","addfield","addEventListener","insertAdjacentHTML","async","evt","preventDefault","countries","FormData","currentTarget","getAll","map","item","trim","filter","capitals","BASE_URL","responses","country","fetch","json","Promise","allSettled","status","value","capital","$ec4442bb8e39cc8f$var$serviceCountries","weather","END_POINT","API_KEY","current","temp_c","condition","text","icon","location","name","$ec4442bb8e39cc8f$var$serviceWeather","console","log"],"version":3,"file":"index.338d9cc7.js.map"}