{"mappings":"AA8RA,MAAMA,EAAOC,SAASC,cAAc,gBAC9BC,EAASF,SAASC,cAAc,eAEtCF,EAAKI,iBAAiB,UAGtB,SAAyBC,GACvBA,EAAIC,iBACJ,MAAMC,SAAEA,EAAQC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,GAAaL,EAAIM,cAAcC,UAmBjE,SAAyBC,GACvB,MAAMC,EAAU,CACdC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,qBAIpB,OAAOC,MAAM,6CAA8CN,GAASO,MAClEC,IACE,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,MAAM,G,EA1BtBC,CANgB,CACdC,KAAMrB,EAASsB,MACfrB,MAAOA,EAAMqB,MACbpB,MAAOA,EAAMoB,MACbC,QAASpB,EAASmB,QAGjBR,MAAKR,GAAQkB,QAAQC,IAAInB,KACzBoB,OAAMC,GAAOH,QAAQC,IAAIE,KACzBC,SAAQ,IAAM9B,EAAI+B,OAAOC,S,IAd9BlC,EAAOC,iBAAiB,SAiBxB,SAA6BC,GA0BpBe,MAAM,8CAA8CC,MAAKC,IAC9D,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,MAAM,IA5BjBL,MAAKR,GAAQkB,QAAQC,IAAInB,KACzBoB,OAAMC,GAAOH,QAAQC,IAAIE,I","sources":["src/script21.js"],"sourcesContent":["// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n\n// CRUD\n\n// R - GET\n// fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n//   .then((response) => response.json())\n//   .then((json) => console.log(json));\n\n//   C - POST\n\n// const options = {\n//   method: \"POST\",\n//   headers: {\n//     \"Content-type\": \"application/json\",\n//   },\n//   body: JSON.stringify({\n//     title: \"Hello from JS\",\n//     body: \"qweryuiqWAERTY\",\n//     userId: 12,\n//   }),\n// };\n\n//-----------------------------------------------------\n// const options = {\n//   method: 'POST',\n//   body: JSON.stringify({\n//     name: 'Test user',\n//     age: 18,\n//   }),\n//   headers: {\n//     'Content-type': 'application/json',\n//   },\n// };\n// fetch('https://someURL', options);\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1')\n//   .then(response => response.json())\n//   .then(json => console.log(json));\n\n//POST -CREATE\n\n// const post = {\n//   title: 'Group 85',\n//   body: 'First post group 85',\n//   userId: 101,\n// };\n\n// const options = {\n//   method: 'POST',\n//   body: JSON.stringify(post),\n//   headers: {\n//     'Content-type': 'application/json',\n//   },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts', options)\n//   .then(resp => {\n//     console.log(resp);\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n//     return resp.json();\n//   })\n//   .then(data => console.log(data))\n//   .catch(err => console.log(err));\n\n//PUT PATCH ---------------------------------------\n\n// const DB = {\n//   id: 1,\n//   title: 'Some title',\n//   body: 'Some body',\n//   userId: 101,\n// };\n\n// const req = {\n//   title: 'New value',\n// };\n\n// const result = {\n//   id: 1,\n//   title: 'Newvalue ',\n//   body: 'Some body',\n//   userId: 101,\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1')\n//   .then(response => response.json())\n//   .then(json => console.log(json));\n\n// const options = {\n//   method: 'PUT',\n//   body: JSON.stringify({\n//     title: 'Group 85',\n//     userId: 102,\n//   }),\n//   headers: {\n//     'Content-type': 'application/json',\n//   },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1', options)\n// .then(resp => {\n//   console.log(resp);\n//   if (!resp.ok) {\n//     throw new Error(resp.statusText);\n//   }\n//   return resp.json();\n// })\n// .then(data => console.log(data))\n// .catch(err => console.log(err));\n\n// const options = {\n//   method: 'DELETE',\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1', options)\n//   .then(resp => {\n//     console.log(resp);\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n//     return resp.json();\n//   })\n//   .then(data => console.log(data))\n//   .catch(err => console.log(err));\n\n// fetch('https://jsonplaceholder.typicode.com/posts',options)\n// .then(resp =>{\n//     if(!resp.ok){\n//         throw new Error(resp.statusText)\n//     }\n//     return resp.json()\n// })\n// .then(data => console.log(data))\n// .catch(err => console.log(err))\n\n// const addPost = document.querySelector('.js-add');\n// const listPosts = document.querySelector('.js-posts');\n// const formWrapper = document.querySelector('.js-form');\n// const errMessage = document.querySelector('.js-error');\n\n// addPost.addEventListener('click', handlerAddPost);\n\n// function handlerAddPost() {\n//   formWrapper.innerHTML = `<form action=\"submit\" class=\"js-form-add\" style:\"style=\"display: flex; flex-direction: column\"\n// \"  >\n//         <input type=\"text\" name=\"name\">\n//         <textarea name=\"description\" cols=\"30\" rows=\"10\"></textarea>\n//         <button>Додати пост</button>\n//     </form>`;\n\n//   const form = document.querySelector('.js-form-add');\n//   form.addEventListener('submit', handlerFormSubmit);\n// }\n\n// function handlerFormSubmit(evt) {\n//   evt.preventDefault();\n//   //   const data = new FormData(evt.currentTarget)\n//   //   for (var key of data.keys()) {\n//   //     console.log(key);\n//   //  }\n//   //   console.log();\n//   // data.forEach(elem => console.log(elem))\n\n//   //   const { name, description } = evt.currentTarget.elements;\n\n//   const {\n//     name: { value: title },\n//     description: { value: body },\n//   } = evt.currentTarget.elements;\n//   //   const data = {\n//   //     title: name.value,\n//   //     body: description.value,\n//   //   };\n//   const data = { title, body };\n\n//   addPostService(data)\n//     .then(obj => {\n//       listPosts.insertAdjacentHTML('beforeend', createPostMarkup(obj));\n//       // listPosts.innerHTML = createPostMarkup(obj)\n//     })\n//     .catch(() => {\n//       errMessage.innerHTML = 'Не можливо додати пост';\n//     })\n//     .finally(() => {\n//       formWrapper.innerHTML = '';\n//       setTimeout(() => {\n//         errMessage.innerHTML = '';\n//       }, 2000);\n//     });\n// }\n\n// function createPostMarkup({ id, title, body }) {\n//   return `<li data-id=\"${id}\">\n//     <h2>${title}</h2>\n//     <p>${body}</p>\n//     </li>`;\n// }\n\n// function addPostService(data) {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-type': 'application/json',\n//     },\n//     body: JSON.stringify(data),\n//   };\n\n//   return fetch('https://jsonplaceholder.typicode.com/posts', options).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n//       return resp.json();\n//     }\n//   );\n// }\n\n// ПЕРЕРВА ДО 21.25\n\n// U PUT PATCH\n\n// PUT\n// {\n//     id:101,\n//     title: 'Hello fish',\n//     body: \"Hello dog\",\n//     userId : 1\n// }\n\n// {\n//     id:101.\n//     title: 'Hello fish'\n// }\n\n//PATCH\n\n// {\n//     id:101,\n//     title: 'Hello fish',\n//     body: \"Hello dog\",\n//     userId : 1\n// }\n\n// {\n//     id:101.\n//     title: 'Hello fish'\n// }\n\n// const options = {\n//   method: \"PUT\",\n//   body: JSON.stringify({\n//     id: 1,\n//     title: \"cat\",\n//   }),\n//   headers: {\n//     \"Content-type\": \"application/json\",\n//   },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n// .then(resp => resp.json()).then(data => console.log(data));\n\n// const options = {\n//     method: \"PATCH\",\n//     body: JSON.stringify({\n//       id: 1,\n//       title: \"cat\",\n//       body : 'Hello dear cat',\n//     }),\n//     headers: {\n//       \"Content-type\": \"application/json\",\n//     },\n//   };\n\n//   fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n//   .then(resp => resp.json()).then(data => console.log(data)).then(err => console.log(err));\n\n// const options ={\n//     method: \"DELETE\"\n// }\n// fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n// .then(resp => console.log(resp))\n\nconst form = document.querySelector('.js-question');\nconst getBtn = document.querySelector('.js-get-all');\n\nform.addEventListener('submit', handlerQuestion);\ngetBtn.addEventListener('click', handlerGetQuestions);\n\nfunction handlerQuestion(evt) {\n  evt.preventDefault();\n  const { userName, phone, email, question } = evt.currentTarget.elements;\n  const request = {\n    name: userName.value,\n    phone: phone.value,\n    email: email.value,\n    comment: question.value,\n  };\n  serviceQuestion(request)\n    .then(data => console.log(data))\n    .catch(err => console.log(err))\n    .finally(() => evt.target.reset());\n}\n\nfunction handlerGetQuestions(evt) {\n  serviceGetQuestions()\n    .then(data => console.log(data))\n    .catch(err => console.log(err));\n}\n\nfunction serviceQuestion(data) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-type': 'application/json',\n    },\n  };\n\n  return fetch('https://jsonplaceholder.typicode.com/posts', options).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n      return resp.json();\n    }\n  );\n}\n\nfunction serviceGetQuestions() {\n  return fetch('https://jsonplaceholder.typicode.com/posts').then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n}\n"],"names":["$ec4442bb8e39cc8f$var$form","document","querySelector","$ec4442bb8e39cc8f$var$getBtn","addEventListener","evt","preventDefault","userName","phone","email","question","currentTarget","elements","data","options","method","body","JSON","stringify","headers","fetch","then","resp","ok","Error","statusText","json","$ec4442bb8e39cc8f$var$serviceQuestion","name","value","comment","console","log","catch","err","finally","target","reset"],"version":3,"file":"index.f8474d39.js.map"}